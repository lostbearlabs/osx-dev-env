#!/usr/bin/env ruby

# Scan all projects under ~/dev for uncommitted changes.
#
# Usage:
# $> git-scan
#


# see: https://stackoverflow.com/a/2659808
def find_changes(dir)

  # uncommited staged changes
  a = `git diff-index --name-only HEAD --`.chomp.split

  # uncommited changed files
  b = `git diff-files --name-only`.chomp.split

  # untracked, unignored files
  c = `git ls-files --exclude-standard --others`.chomp.split

  return (a + b + c).uniq.sort

end

def check_dir(dir)
  gitdir = dir + "/.git"
  return unless Dir.exist?(gitdir)

  Dir.chdir(dir) do
    changes = find_changes(dir)
    unless changes.empty?
      puts "#{dir}  (#{changes.length} files):"
      changes.each { |file| puts "   #{file}"}
    end
  end
end


def process_dir_recursively(dir)
  check_dir(dir)
  Dir.foreach(dir) do |child|
    next if child.start_with?('.')
    next unless Dir.exist?(dir + "/" + child)
    process_dir_recursively(dir + "/" + child)
  end
end


process_dir_recursively( File.expand_path('~/dev') )


